###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.4.54170/W32 for ARM     02/Jul/2013  21:36:52 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  F:\Firmware\emberZNet\firmware\EmberZNet\EM35x\app\util\ #
#                    source-route-common.c                                    #
#    Command line =  F:\Firmware\emberZNet\firmware\EmberZNet\EM35x\app\util\ #
#                    source-route-common.c -D DEBUG -D                        #
#                    "BOARD_HEADER=\"hal/micro/cortexm3/em35x/board/dev0680.h #
#                    \"" -D "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/ia #
#                    r.h\"" -D HAL_MICRO -D CORTEXM3 -D CORTEXM3_EM357 -D     #
#                    PHY_EM3XX -D BOARD_DEV0680 -D                            #
#                    "CONFIGURATION_HEADER=\"app/sensor/sensor-configuration. #
#                    h\"" -D SINK_APP -D EMBER_SERIAL1_MODE=EMBER_SERIAL_FIFO #
#                     -D EMBER_SERIAL1_TX_QUEUE_SIZE=128 -D                   #
#                    EMBER_SERIAL1_RX_QUEUE_SIZE=16 -D EMBER_SERIAL0_DEBUG    #
#                    -D EMBER_SERIAL0_MODE=EMBER_SERIAL_FIFO -D               #
#                    EMBER_SERIAL0_TX_QUEUE_SIZE=128 -D                       #
#                    EMBER_SERIAL0_RX_QUEUE_SIZE=64 -D                        #
#                    SCAN_DEBUG_PRINT_ENABLE -D USE_BOOTLOADER_LIB -D         #
#                    "__SOURCEFILE__=\"source-route-common.c\"" -lC           #
#                    F:\Firmware\emberZNet\firmware\EmberZNet\EM35x\build\sin #
#                    k-cortexm3-iar-em357-em3xx-dev0680-debug\Lst\            #
#                    --diag_suppress Pa050 -o F:\Firmware\emberZNet\firmware\ #
#                    EmberZNet\EM35x\build\sink-cortexm3-iar-em357-em3xx-dev0 #
#                    680-debug\Obj\ --debug --endian=little --cpu=Cortex-M3   #
#                    -e --fpu=None --dlib_config "D:\Program Files\IAR        #
#                    Systems\Embedded Workbench 6.4\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -I F:\Firmware\emberZNet\firmware\EmberZNet\EM35x #
#                    \app\util\ -I F:\Firmware\emberZNet\firmware\EmberZNet\E #
#                    M35x\app\sensor\ewb-em357\..\..\..\ -I                   #
#                    F:\Firmware\emberZNet\firmware\EmberZNet\EM35x\app\senso #
#                    r\ewb-em357\..\..\..\STACK\ -I                           #
#                    F:\Firmware\emberZNet\firmware\EmberZNet\EM35x\app\senso #
#                    r\ewb-em357\..\..\..\HAL\ -I                             #
#                    F:\Firmware\emberZNet\firmware\EmberZNet\EM35x\app\senso #
#                    r\ewb-em357\..\..\..\ -Ohz --use_c++_inline              #
#    List file    =  F:\Firmware\emberZNet\firmware\EmberZNet\EM35x\build\sin #
#                    k-cortexm3-iar-em357-em3xx-dev0680-debug\Lst\source-rout #
#                    e-common.lst                                             #
#    Object file  =  F:\Firmware\emberZNet\firmware\EmberZNet\EM35x\build\sin #
#                    k-cortexm3-iar-em357-em3xx-dev0680-debug\Obj\source-rout #
#                    e-common.o                                               #
#                                                                             #
#                                                                             #
###############################################################################

F:\Firmware\emberZNet\firmware\EmberZNet\EM35x\app\util\source-route-common.c
      1          // File: source-route-common.c
      2          //
      3          // Description: Common code used for managing source routes on both node-based
      4          // and host-based gateways. See source-route.c for node-based gateways and
      5          // source-route-host.c for host-based gateways.
      6          // 
      7          // Copyright 2007 by Ember Corporation. All rights reserved.                *80*
      8          
      9          
     10          #include PLATFORM_HEADER
     11          #include "stack/include/ember-types.h"
     12          #include "source-route-common.h"
     13          
     14          // AppBuilder includes this file and uses the define below to turn off source
     15          // routing. This doesnt affect non-AppBuilder applications.
     16          #ifndef ZA_NO_SOURCE_ROUTING
     17          
     18          // The number of entries in use.

   \                                 In section .data, align 1
     19          static int8u entryCount = 0;
   \                     entryCount:
   \   00000000   0x00               DC8 0
   \   00000001   0xFF               DC8 255
     20          
     21          // The index of the most recently added entry.
     22          static int8u newestIndex = NULL_INDEX;
     23          
     24          // Return the index of the entry with the specified destination.

   \                                 In section .text, align 2, keep-with-next
     25          int8u sourceRouteFindIndex(EmberNodeId id)
     26          {
     27            int8u i;
     28            for (i = 0; i < entryCount; i++) {
   \                     sourceRouteFindIndex:
   \   00000000   0x2100             MOVS     R1,#+0
   \   00000002   0xE000             B.N      ??sourceRouteFindIndex_0
   \                     ??sourceRouteFindIndex_1:
   \   00000004   0x1C49             ADDS     R1,R1,#+1
   \                     ??sourceRouteFindIndex_0:
   \   00000006   0x....             LDR.N    R2,??DataTable2
   \   00000008   0x7812             LDRB     R2,[R2, #+0]
   \   0000000A   0xB2C9             UXTB     R1,R1
   \   0000000C   0x4291             CMP      R1,R2
   \   0000000E   0xD207             BCS.N    ??sourceRouteFindIndex_2
     29              if (sourceRouteTable[i].destination == id) {
   \   00000010   0x....             LDR.N    R2,??DataTable2_1
   \   00000012   0x6812             LDR      R2,[R2, #+0]
   \   00000014   0xF832 0x2021      LDRH     R2,[R2, R1, LSL #+2]
   \   00000018   0x4282             CMP      R2,R0
   \   0000001A   0xD1F3             BNE.N    ??sourceRouteFindIndex_1
     30                return i;
   \   0000001C   0x4608             MOV      R0,R1
   \   0000001E   0x4770             BX       LR
     31              }
     32            }
     33            return NULL_INDEX;
   \                     ??sourceRouteFindIndex_2:
   \   00000020   0x20FF             MOVS     R0,#+255
   \   00000022   0x4770             BX       LR               ;; return
     34          }
     35          
     36          // Create an entry with the given id or update an existing entry. furtherIndex
     37          // is the entry one hop further from the gateway.

   \                                 In section .text, align 2, keep-with-next
     38          int8u sourceRouteAddEntry(EmberNodeId id, int8u furtherIndex)
     39          {
   \                     sourceRouteAddEntry:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
     40            // See if the id already exists in the table.
     41            int8u index = sourceRouteFindIndex(id);
   \   00000006   0x.... 0x....      BL       sourceRouteFindIndex
     42            int8u i;
     43          
     44            if (index == NULL_INDEX) {
   \   0000000A   0x....             LDR.N    R1,??DataTable2_1
   \   0000000C   0x....             LDR.N    R2,??DataTable2
   \   0000000E   0x28FF             CMP      R0,#+255
   \   00000010   0xD110             BNE.N    ??sourceRouteAddEntry_0
     45              if (entryCount < sourceRouteTableSize) {
   \   00000012   0x7810             LDRB     R0,[R2, #+0]
   \   00000014   0x....             LDR.N    R3,??DataTable2_2
   \   00000016   0x781B             LDRB     R3,[R3, #+0]
   \   00000018   0x4298             CMP      R0,R3
   \   0000001A   0xD202             BCS.N    ??sourceRouteAddEntry_1
     46                // No existing entry. Table is not full. Add new entry.
     47                index = entryCount;
     48                entryCount += 1;
   \   0000001C   0x1C43             ADDS     R3,R0,#+1
   \   0000001E   0x7013             STRB     R3,[R2, #+0]
   \   00000020   0xE008             B.N      ??sourceRouteAddEntry_0
     49              } else {
     50                // No existing entry. Table is full. Replace oldest entry.
     51                index = newestIndex;
   \                     ??sourceRouteAddEntry_1:
   \   00000022   0x7850             LDRB     R0,[R2, #+1]
   \   00000024   0x680E             LDR      R6,[R1, #+0]
   \   00000026   0xE000             B.N      ??sourceRouteAddEntry_2
     52                while (sourceRouteTable[index].olderIndex != NULL_INDEX) {
     53                  index = sourceRouteTable[index].olderIndex;
   \                     ??sourceRouteAddEntry_3:
   \   00000028   0x4618             MOV      R0,R3
     54                }
   \                     ??sourceRouteAddEntry_2:
   \   0000002A   0xEB06 0x0380      ADD      R3,R6,R0, LSL #+2
   \   0000002E   0x78DB             LDRB     R3,[R3, #+3]
   \   00000030   0x2BFF             CMP      R3,#+255
   \   00000032   0xD1F9             BNE.N    ??sourceRouteAddEntry_3
     55              }
     56            }
     57          
     58            // Update the pointers (only) if something has changed.
     59            if (index != newestIndex) {
   \                     ??sourceRouteAddEntry_0:
   \   00000034   0x7853             LDRB     R3,[R2, #+1]
   \   00000036   0x4298             CMP      R0,R3
   \   00000038   0xD017             BEQ.N    ??sourceRouteAddEntry_4
     60              for (i = 0; i < entryCount; i++) {
   \   0000003A   0x2700             MOVS     R7,#+0
   \   0000003C   0xE000             B.N      ??sourceRouteAddEntry_5
   \                     ??sourceRouteAddEntry_6:
   \   0000003E   0x1C7F             ADDS     R7,R7,#+1
   \                     ??sourceRouteAddEntry_5:
   \   00000040   0x7816             LDRB     R6,[R2, #+0]
   \   00000042   0xB2FF             UXTB     R7,R7
   \   00000044   0x42B7             CMP      R7,R6
   \   00000046   0xD20B             BCS.N    ??sourceRouteAddEntry_7
   \   00000048   0x680E             LDR      R6,[R1, #+0]
   \   0000004A   0xEB06 0x0C87      ADD      R12,R6,R7, LSL #+2
   \   0000004E   0xF89C 0xE003      LDRB     LR,[R12, #+3]
   \   00000052   0x4586             CMP      LR,R0
   \   00000054   0xD1F3             BNE.N    ??sourceRouteAddEntry_6
     61                if (sourceRouteTable[i].olderIndex == index) {
     62                  sourceRouteTable[i].olderIndex = sourceRouteTable[index].olderIndex;
   \   00000056   0xEB06 0x0680      ADD      R6,R6,R0, LSL #+2
   \   0000005A   0x78F6             LDRB     R6,[R6, #+3]
   \   0000005C   0xF88C 0x6003      STRB     R6,[R12, #+3]
     63                  break;
     64                }
     65              }
     66              sourceRouteTable[index].olderIndex = newestIndex;
   \                     ??sourceRouteAddEntry_7:
   \   00000060   0x680E             LDR      R6,[R1, #+0]
   \   00000062   0xEB06 0x0680      ADD      R6,R6,R0, LSL #+2
   \   00000066   0x70F3             STRB     R3,[R6, #+3]
     67              newestIndex = index;
   \   00000068   0x7050             STRB     R0,[R2, #+1]
     68            }
     69          
     70            // Add the entry.
     71            sourceRouteTable[index].destination = id;
   \                     ??sourceRouteAddEntry_4:
   \   0000006A   0x680A             LDR      R2,[R1, #+0]
   \   0000006C   0xF822 0x4020      STRH     R4,[R2, R0, LSL #+2]
     72            sourceRouteTable[index].closerIndex = NULL_INDEX;
   \   00000070   0xEB02 0x0280      ADD      R2,R2,R0, LSL #+2
   \   00000074   0x23FF             MOVS     R3,#+255
   \   00000076   0x7093             STRB     R3,[R2, #+2]
     73          
     74          
     75            // The current index is one hop closer to the gateway than furtherIndex.
     76            if (furtherIndex != NULL_INDEX) {
   \   00000078   0x2DFF             CMP      R5,#+255
   \   0000007A   0xD003             BEQ.N    ??sourceRouteAddEntry_8
     77              sourceRouteTable[furtherIndex].closerIndex = index;
   \   0000007C   0x6809             LDR      R1,[R1, #+0]
   \   0000007E   0xEB01 0x0185      ADD      R1,R1,R5, LSL #+2
   \   00000082   0x7088             STRB     R0,[R1, #+2]
     78            }
     79          
     80            // Return the current index to save the caller having to look it up. 
     81            return index;
   \                     ??sourceRouteAddEntry_8:
   \   00000084   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
     82          }  
     83          

   \                                 In section .text, align 2, keep-with-next
     84          void sourceRouteInit(void)
     85          {
     86            entryCount = 0;
   \                     sourceRouteInit:
   \   00000000   0x....             LDR.N    R0,??DataTable2
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0x7001             STRB     R1,[R0, #+0]
     87          }
   \   00000006   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     entryCount

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     sourceRouteTable

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     sourceRouteTableSize
     88          
     89          #endif //ZA_NO_SOURCE_ROUTING

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       24  sourceRouteAddEntry
             24 -> sourceRouteFindIndex
        0  sourceRouteFindIndex
        0  sourceRouteInit


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       2  entryCount
          newestIndex
     134  sourceRouteAddEntry
      36  sourceRouteFindIndex
       8  sourceRouteInit

 
   2 bytes in section .data
 190 bytes in section .text
 
 190 bytes of CODE memory
   2 bytes of DATA memory

Errors: none
Warnings: none
